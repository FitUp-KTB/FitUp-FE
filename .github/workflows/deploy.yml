name: CI/CD Pipeline for Frontend

on:
  push:
    branches:
      - main
      - dev

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Docker Tag
        run: |
          BRANCH_NAME="${GITHUB_REF##*/}"
          if [ "$BRANCH_NAME" == "main" ]; then
            IMAGE_NAME="${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest"
          else
            IMAGE_NAME="${{ secrets.DOCKER_HUB_USERNAME }}/frontend-dev:latest"
          fi
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          echo "🔹 Docker 이미지 빌드: $IMAGE_NAME"
          docker build -t "$IMAGE_NAME" \
            --build-arg NEXT_PUBLIC_BASE_URL="${{ secrets.NEXT_PUBLIC_BASE_URL }}" \
            .
            
          echo "🔹 Docker Hub 푸시: $IMAGE_NAME"
          docker push "$IMAGE_NAME"

  deploy:
    name: Deploy Frontend Container
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'prod' || 'dev' }}

    steps:
      - name: Deploy via Jump Server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_JUMP_KEY }}" > ~/.ssh/jump_key
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private_vm_key
          chmod 600 ~/.ssh/jump_key ~/.ssh/private_vm_key

          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            IMAGE_NAME="${{ secrets.DOCKER_HUB_USERNAME }}/frontend"
            CONTAINER_NAME="fitup-frontend"
          else
            IMAGE_NAME="${{ secrets.DOCKER_HUB_USERNAME }}/frontend-dev"
            CONTAINER_NAME="fitup-frontend-dev"
          fi

          ssh \
            -o StrictHostKeyChecking=no \
            -o UserKnownHostsFile=/dev/null \
            -o ProxyCommand="ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/jump_key -W %h:%p ${{ secrets.SSH_JUMP_USER }}@${{ secrets.SSH_JUMP_HOST }}" \
            -i ~/.ssh/private_vm_key \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF

            set -e

            docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"
            docker pull $IMAGE_NAME:latest

            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            docker run -d \
              --name $CONTAINER_NAME \
              -p 3000:3000 \
              --restart unless-stopped \
              $IMAGE_NAME:latest

            docker image prune -af
          EOF